Index: hdf.spec
===================================================================
--- hdf.spec	(revision 1)
+++ hdf.spec	(working copy)
@@ -53,6 +53,7 @@
 # The test for fortestF is failing, causing buildfailures for different platforms. Disable for now.
 Patch13:        hdf-disable-fortestF.patch 
 Patch14:        hdf-ppc64le.patch
+Patch15:        hdf4-add-linux_mips64.patch
 BuildRoot:      %{_tmppath}/%{name}-%{version}-build
 BuildRequires:  bison
 BuildRequires:  bzip2
@@ -394,6 +395,7 @@
 %patch12 -p0
 %patch13 -p1
 %patch14 -p1
+%patch15 -p1
 
 for mpi in %_mpi;
 do
Index: hdf4-add-linux_mips64.patch
===================================================================
--- hdf4-add-linux_mips64.patch	(revision 0)
+++ hdf4-add-linux_mips64.patch	(working copy)
@@ -0,0 +1,360 @@
+diff -Nrui hdf-4.2.11-orig/hdf/src/hconv.h hdf-4.2.11/hdf/src/hconv.h
+--- hdf-4.2.11-orig/hdf/src/hconv.h	2020-01-21 14:16:01.724427963 +0800
++++ hdf-4.2.11/hdf/src/hconv.h	2020-01-21 15:25:46.412826407 +0800
+@@ -59,7 +59,7 @@
+ /* CONSTANT DEFINITIONS                                                      */
+ /*****************************************************************************/
+ /* Generally Big-Endian machines */
+-#if !defined(INTEL86) && !defined(MIPSEL) && !defined(DEC_ALPHA) && !defined(I860) && !defined(SUN386) && !(defined(__ia64) && !(defined(hpux) || defined(__hpux))) && !defined(__x86_64__) && !defined(__arm__) && !defined __aarch64__ && !(defined(__powerpc__) && defined(__LITTLE_ENDIAN__))
++#if !defined(INTEL86) && !defined(MIPSEL) && !defined(DEC_ALPHA) && !defined(I860) && !defined(SUN386) && !(defined(__ia64) && !(defined(hpux) || defined(__hpux))) && !defined(__x86_64__) && !defined(__arm__) && !defined __aarch64__ && !(defined(__powerpc__) && defined(__LITTLE_ENDIAN__)) && (!defined(__MIPSEL__) && !defined(__mips64))
+ #       define UI8_IN     DFKnb1b   /* Unsigned Integer, 8 bits */
+ #       define UI8_OUT    DFKnb1b
+ #       define SI16_IN    DFKnb2b   /* S = Signed */
+diff -Nrui hdf-4.2.11-orig/hdf/src/hdfi.h hdf-4.2.11/hdf/src/hdfi.h
+--- hdf-4.2.11-orig/hdf/src/hdfi.h	2020-01-21 14:16:01.728351101 +0800
++++ hdf-4.2.11/hdf/src/hdfi.h	2020-01-21 15:25:46.416734629 +0800
+@@ -62,6 +62,8 @@
+ #define     DFMT_CTSS           0x3331
+ #define     DFMT_VAX            0x2221
+ #define     DFMT_MIPSEL         0x4441
++#define     DFMT_MIPS64LE       0x4441
++#define     DFMT_MIPS64         0x4441
+ #define     DFMT_PC             0x4441
+ #define     DFMT_APPLE          0x1111
+ #define     DFMT_APPLE_INTEL    0x4441
+@@ -977,6 +979,68 @@
+ 
+ /*-----------------------------------------------------*/
+ #endif /*power PC 5 64 */
++
++#if defined __mips64
++/* powerpc 64 bits */
++#ifdef GOT_MACHINE
++If you get an error on this line more than one machine type has been defined.
++Please check your Makefile.
++#endif
++#define GOT_MACHINE
++
++#ifdef __LITTLE_ENDIAN__
++/* MIPS 64 little endian */
++#define DF_MT             DFMT_MIPS64LE
++#else
++/* MIPS 64 */
++#define DF_MT             DFMT_MIPS64
++#endif
++
++#include <sys/file.h>               /* for unbuffered i/o stuff */
++#include <sys/stat.h>
++typedef void              VOID;
++typedef void              *VOIDP;
++typedef char              *_fcd;
++typedef char              char8;
++typedef unsigned char     uchar8;
++typedef char              int8;
++typedef unsigned char     uint8;
++typedef short int         int16;
++typedef unsigned short int uint16;
++typedef int               int32;
++typedef unsigned int      uint32;
++typedef int               intn;
++typedef unsigned int      uintn;
++typedef int               intf;     /* size of INTEGERs in Fortran compiler */
++typedef float             float32;
++typedef double            float64;
++typedef long              hdf_pint_t;   /* an integer the same size as a pointer */
++#if defined __GNUC__
++#define FNAME_POST_UNDERSCORE
++#endif
++#define _fcdtocp(desc) (desc)
++#define FILELIB UNIXBUFIO
++
++/* JPEG #define's - Look in the JPEG docs before changing - (Q) */
++
++/* Determine the memory manager we are going to use. Valid values are: */
++/*  MEM_DOS, MEM_ANSI, MEM_NAME, MEM_NOBS.  See the JPEG docs for details on */
++/*  what each does */
++#define JMEMSYS         MEM_ANSI
++
++#ifdef __GNUC__
++#define HAVE_STDC
++#define INCLUDES_ARE_ANSI
++#endif
++
++#endif /* mipsel 64 bits */
++
++
++
++
++
++/*-----------------------------------------------------*/
++
+ /* Linux 64 */
+ #if defined(__linux__) && defined __x86_64__  && !(defined  SUN)  /* i.e. 64-bit Linux  but not SunOS on Intel */
+ 
+diff -Nrui hdf-4.2.11-orig/mfhdf/fortran/jackets.c.in hdf-4.2.11/mfhdf/fortran/jackets.c.in
+--- hdf-4.2.11-orig/mfhdf/fortran/jackets.c.in	2020-01-21 14:16:01.771505621 +0800
++++ hdf-4.2.11/mfhdf/fortran/jackets.c.in	2020-01-21 15:25:46.416734629 +0800
+@@ -34,7 +34,7 @@
+ 
+ struct ncfils {			/* This will be a common block from Fortran */
+     double dd;
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+     int ll;
+ #else
+     long ll;
+@@ -65,7 +65,7 @@
+ 
+ struct ncfils {			/* This will be a common block from Fortran */
+     double dd;
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+     int ll;
+ #else
+     long ll;
+@@ -420,7 +420,7 @@
+ }
+ #endif /* FORTRAN_HAS_NO_SHORT */
+ 
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ /*
+  * Convert multi-dimensional array of NCLONGs stored in ints to packed
+  * array of longs, in malloc'ed space.  Returns pointer to longs or NULL
+@@ -908,7 +908,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long          longs = *(int *)value;
+@@ -1022,7 +1022,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long *longs = itol (value, ncount, ndims);
+@@ -1133,7 +1133,7 @@
+ 	tmpbasis	= nctypelen(NC_LONG);
+     else
+ #endif
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+     if (datatype == NC_LONG)
+ 	tmpbasis	= sizeof(int);
+     else
+@@ -1190,7 +1190,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long *longs = itolg (value, ncount, nbasis, ndims);
+@@ -1326,7 +1326,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long          longs;
+@@ -1468,7 +1468,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long iocount = dimprod (ncount, ndims);	/* product of dimensions */
+@@ -1606,7 +1606,7 @@
+ 	tmpbasis	= nctypelen(NC_LONG);
+     else
+ #endif
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+     if (datatype == NC_LONG)
+ 	tmpbasis	= sizeof(int);
+     else
+@@ -1677,7 +1677,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long iocount = dimprod (ncount, ndims);	/* product of dimensions */
+@@ -1843,7 +1843,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) *datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ 	long *longs = itol (value, attlen, 1);
+@@ -2008,7 +2008,7 @@
+ 	return;
+     }				/* else */
+ #endif				/* FORTRAN_HAS_NO_SHORT */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ #ifdef HDF
+     if ((nc_type) datatype == NC_LONG && handle->file_type!=HDF_FILE) {
+ /* EIP  We need to use int buffer to read data in on the platforms where long is 8 bytes
+diff -Nrui hdf-4.2.11-orig/mfhdf/libsrc/array.c hdf-4.2.11/mfhdf/libsrc/array.c
+--- hdf-4.2.11-orig/mfhdf/libsrc/array.c	2020-01-21 14:16:01.791121312 +0800
++++ hdf-4.2.11/mfhdf/libsrc/array.c	2020-01-21 15:25:46.416734629 +0800
+@@ -620,7 +620,7 @@
+ 		xdr_NC_fnct = xdr_shorts ;
+ 		goto func ;
+ 	case NC_LONG :
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ 		xdr_NC_fnct = xdr_int ;
+ #else
+ 		xdr_NC_fnct = xdr_long ;
+diff -Nrui hdf-4.2.11-orig/mfhdf/libsrc/cdf.c hdf-4.2.11/mfhdf/libsrc/cdf.c
+--- hdf-4.2.11-orig/mfhdf/libsrc/cdf.c	2020-01-21 14:16:01.791121312 +0800
++++ hdf-4.2.11/mfhdf/libsrc/cdf.c	2020-01-21 15:25:46.420642850 +0800
+@@ -3662,7 +3662,7 @@
+         break ;
+     case NC_LONG :
+         alen /= 4 ;
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+         xdr_NC_fnct = xdr_int ;
+ #else
+         xdr_NC_fnct = xdr_long ;
+diff -Nrui hdf-4.2.11-orig/mfhdf/libsrc/netcdf.h.in hdf-4.2.11/mfhdf/libsrc/netcdf.h.in
+--- hdf-4.2.11-orig/mfhdf/libsrc/netcdf.h.in	2020-01-21 14:16:01.787198174 +0800
++++ hdf-4.2.11/mfhdf/libsrc/netcdf.h.in	2020-01-21 15:25:46.420642850 +0800
+@@ -293,7 +293,7 @@
+ /* 
+  * Variables/attributes of type NC_LONG should use the C type 'nclong'
+  */
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ /*
+  * LP64 (also known as 4/8/8) denotes long and pointer as 64 bit types.
+  * http://www.unix.org/version2/whatsnew/lp64_wp.html
+diff -Nrui hdf-4.2.11-orig/mfhdf/libsrc/putget.c hdf-4.2.11/mfhdf/libsrc/putget.c
+--- hdf-4.2.11-orig/mfhdf/libsrc/putget.c	2020-01-21 14:16:01.791121312 +0800
++++ hdf-4.2.11/mfhdf/libsrc/putget.c	2020-01-21 15:25:46.424551072 +0800
+@@ -665,7 +665,7 @@
+ 	case NC_SHORT :
+ 		return( xdr_NCvshort(xdrs, (unsigned)rem/2, (short *)values) ) ;
+ 	case NC_LONG :
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ 		return( xdr_int(xdrs, (nclong *)values) ) ;
+ #else
+ 		return( xdr_long(xdrs, (nclong *)values) ) ;
+@@ -1976,7 +1976,7 @@
+ 		} /* else */
+ 		return(TRUE) ;
+ 	case NC_LONG :
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ 		xdr_NC_fnct = xdr_int ;
+ #else
+ 		xdr_NC_fnct = xdr_long ;
+diff -Nrui hdf-4.2.11-orig/mfhdf/libsrc/xdrposix.c hdf-4.2.11/mfhdf/libsrc/xdrposix.c
+--- hdf-4.2.11-orig/mfhdf/libsrc/xdrposix.c	2020-01-21 14:16:01.791121312 +0800
++++ hdf-4.2.11/mfhdf/libsrc/xdrposix.c	2020-01-21 15:26:58.786551488 +0800
+@@ -254,7 +254,7 @@
+ 
+ static bool_t   xdrposix_getlong();
+ static bool_t   xdrposix_putlong();
+-#if (_MIPS_SZLONG == 64) || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if (_MIPS_SZLONG == 64) || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ static bool_t   xdrposix_getint();
+ static bool_t   xdrposix_putint();
+ #endif
+@@ -268,7 +268,7 @@
+ #if (defined __sun && defined _LP64)
+ static rpc_inline_t *    xdrposix_inline();
+ #else
+-#if ((defined __x86_64__ ) && !(defined __sun && defined _LP64)) || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if ((defined __x86_64__ ) && !(defined __sun && defined _LP64)) || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ static int32_t *    xdrposix_inline();
+ #else
+ #if (defined __alpha )
+@@ -298,9 +298,9 @@
+     xdrposix_getpos,    /* get offset in the stream */
+     xdrposix_setpos,    /* set offset in the stream */
+     xdrposix_inline,    /* prime stream for inline macros */
+-#if (defined __sun && defined _LP64) || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if (defined __sun && defined _LP64) || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+     xdrposix_destroy,   /* destroy stream */
+-#if !(defined __s390x__) && !(defined __x86_64__) && !(defined __powerpc64__) && !defined __aarch64__ || (defined  __sun && defined _LP64) /* i.e. we are on SUN/Intel in 64-bit mode */
++#if !(defined __mips64) && !(defined __s390x__) && !(defined __x86_64__) && !(defined __powerpc64__) && !defined __aarch64__ || (defined  __sun && defined _LP64) /* i.e. we are on SUN/Intel in 64-bit mode */
+     NULL,               /* no xdr_control function defined */
+ #endif 
+     /* Solaris 64-bit (arch=v9 and arch=amd64) has 64 bits long and 32 bits int. */
+@@ -556,7 +556,7 @@
+ #if (defined  __alpha)
+ static int* 
+ #else
+-#if ((defined  __x86_64__) && !(defined __sun && defined _LP64)) || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if ((defined  __x86_64__) && !(defined __sun && defined _LP64)) || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ static int32_t * 
+ #else
+ static netlong * 
+@@ -584,7 +584,7 @@
+     return (NULL);
+ }
+ 
+-#if (_MIPS_SZLONG == 64) || (defined __sun && defined _LP64) || defined AIX5L64  || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if (_MIPS_SZLONG == 64) || (defined __sun && defined _LP64) || defined AIX5L64  || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ 
+ static bool_t
+ xdrposix_getint(xdrs, lp)
+diff -Nrui hdf-4.2.11-orig/mfhdf/ncgen/ncgen.l hdf-4.2.11/mfhdf/ncgen/ncgen.l
+--- hdf-4.2.11-orig/mfhdf/ncgen/ncgen.l	2020-01-21 14:16:01.795044450 +0800
++++ hdf-4.2.11/mfhdf/ncgen/ncgen.l	2020-01-21 15:25:46.424551072 +0800
+@@ -113,7 +113,7 @@
+ 		    yyerror(errstr);
+ 		}
+ 
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || defined __powerpc64__ || defined __aarch64__ || defined __s390x__ || defined __mips64
+ 		if (dd < INT_MIN  ||  dd > INT_MAX) 
+ #else
+ 		if (dd < LONG_MIN  ||  dd > LONG_MAX) 
+diff -Nrui hdf-4.2.11-orig/mfhdf/ncgen/ncgenyy.c hdf-4.2.11/mfhdf/ncgen/ncgenyy.c
+--- hdf-4.2.11-orig/mfhdf/ncgen/ncgenyy.c	2020-01-21 14:16:01.795044450 +0800
++++ hdf-4.2.11/mfhdf/ncgen/ncgenyy.c	2020-01-21 15:25:46.428459294 +0800
+@@ -989,7 +989,7 @@
+ 		    yyerror(errstr);
+ 		}
+ 
+-#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || __powerpc64__ || defined __aarch64__ || defined __s390x__
++#if defined __alpha || (_MIPS_SZLONG == 64) || defined __ia64 || (defined __sun && defined _LP64) || defined AIX5L64 || defined __x86_64__ || __powerpc64__ || defined __aarch64__ || defined __s390x__  || __mips64
+ 		if (dd < INT_MIN  ||  dd > INT_MAX) 
+ #else
+ 		if (dd < LONG_MIN  ||  dd > LONG_MAX) 
+--- a/mfhdf/libsrc/xdrposix.c
++++ b/mfhdf/libsrc/xdrposix.c
+@@ -287,12 +287,6 @@ static void xdrposix_destroy();
+ static struct xdr_ops   xdrposix_ops = {
+     xdrposix_getlong,   /* deserialize a 32-bit int */
+     xdrposix_putlong,   /* serialize a 32-bit int */
+-#if (_MIPS_SZLONG == 64)
+-    /* IRIX64 has 64 bits long and 32 bits int. */
+-    /* It defines two extra entries for get/put int. */
+-    xdrposix_getint,   /* deserialize a 32-bit int */
+-    xdrposix_putint,   /* serialize a 32-bit int */
+-#endif
+     xdrposix_getbytes,  /* deserialize counted bytes */
+     xdrposix_putbytes,  /* serialize counted bytes */
+     xdrposix_getpos,    /* get offset in the stream */
